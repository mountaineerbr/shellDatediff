.\" Automatically generated by Pandoc 3.1.9
.\"
.TH "DATEDIFF.SH" "1" "October 2024" "v0.24.3" "General Commands Manual"
.SH NAME
.PP
\ \ \ \f[B]datediff.sh\f[R] - Calculate time ranges / intervals between
dates
.SS SYNOPSIS
.PP
\ \ \ \f[B]datediff.sh\f[R] [\f[B]-Rrttuvvv\f[R]]
[\f[CR]-\f[R]\f[I]NUM\f[R]] [\f[CR]-f\f[R]\f[I]\[dq]FMT\[dq]\f[R]]
\f[I]DATE1\f[R] \f[I]DATE2\f[R] [\f[I]UNIT\f[R]]
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] \f[B]-FF\f[R] [\f[B]-vv\f[R]]
[[\f[I]DAY_IN_WEEK\f[R]] [\f[I]DAY_IN_MONTH\f[R]]]
[\f[I]START_DATE\f[R]]
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] \f[B]-eel\f[R] [\f[B]-v\f[R]]
\f[I]YEAR\f[R]..
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] \f[B]-m\f[R] [\f[B]-v\f[R]] \f[I]DATE\f[R]..
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] \f[B]-h\f[R]
.SS DESCRIPTION
Calculate \f[B]time interval\f[R] (elapsed) between \f[I]DATE1\f[R] and
\f[I]DATE2\f[R] in various time units.
The \f[CR]C-code date\f[R] programme is optionally run to process dates.
.PP
Extra functions include checking if \f[I]YEAR\f[R] is \f[B]leap\f[R],
generating \f[B]Easter\f[R], \f[B]Carnaval\f[R], and \f[B]Corpus
Christi\f[R] \f[B]dates\f[R] on a given \f[I]YEAR\f[R] and the
\f[B]phase of the moon\f[R] at \f[I]DATE\f[R].
.SS Main Function
In the main function, \f[CR]GNU date\f[R] accepts mostly free format
human readable date strings.
If using \f[CR]FreeBSD date\f[R], input \f[I]DATE\f[R] strings must be
\f[B]ISO-8601\f[R] (\f[I]YYYY-MM-DDThh:mm:ss\f[R]), unless \f[B]option
-f\f[R] \f[I]FMT\f[R] is set to a new input time format.
If \f[CR]C-code date\f[R] programme is not available then input must be
formatted as \f[B]ISO-8601\f[R] or \f[B]UNIX time\f[R].
.PP
If \f[I]DATE\f[R] is not set, defaults to \f[I]now\f[R].
If only one \f[I]DATE\f[R] is set, the first one is assumed to be
\f[I]now\f[R] or \f[I]1970\f[R].
.PP
To flag \f[I]DATE\f[R] as \f[B]UNIX time\f[R], prepend an \[lq]at\[rq]
sign \[lq]\f[I]\[at]\f[R]\[rq] to it or set \f[B]option -r\f[R].
.PP
Stdin input supports one \f[I]DATE\f[R] string per line (max two lines)
or two ISO-8601 \f[I]DATES\f[R] separated by space in a single line.
Input is processed in a best effort basis.
.SS Main Output
Output \f[B]\[lq]RANGES\[rq]\f[R] section displays intervals in
\f[B]different units of time\f[R] (years, or months, or weeks, or days,
or hours, or minutes, or seconds alone).
It also displays a \f[B]compound time range\f[R] with all the above
units into consideration to each other.
.PP
Single \f[I]UNIT\f[R] time periods can be displayed in \f[B]table
format\f[R] with \f[B]option -t\f[R] and their \f[B]scale\f[R] set with
command line \f[B]option -NUM\f[R] where \f[I]NUM\f[R] is an integer.
The least significant digit of the result is subject to rounding.
When last positional parameter \f[I]UNIT\f[R] is exactly one of
\f[I]Y\f[R], \f[I]MO\f[R], \f[I]W\f[R], \f[I]D\f[R], \f[I]H\f[R],
\f[I]M\f[R], or \f[I]S\f[R], only a single \f[I]UNIT\f[R] interval is
printed to stdout.
.PP
Output \f[B]\[lq]DATES\[rq]\f[R] section prints two dates in
\f[B]ISO-8601 format\f[R] or, if \f[B]option -R\f[R] is set,
\f[B]RFC-5322 format\f[R].
.PP
\f[B]Option -u\f[R] sets or prints dates in \f[B]Coordinated Universal
Time (UTC)\f[R] in the main function.
This affects how the \f[CR]C-code date\f[R] programme process dates.
.SS Extra Functions
\f[B]Option -e\f[R] prints \f[B]Easter dates\f[R] for given
\f[I]YEARS\f[R] (for Western Churches) and \f[B]option -ee\f[R]
additionally prints \f[B]Carnaval\f[R] and \f[B]Corpus Christi
dates\f[R].
.PP
\f[B]Option -l\f[R] checks if a \f[I]YEAR\f[R] \f[B]is leap\f[R].
Set \f[B]option -v\f[R] to \f[B]decrease verbosity\f[R].
The ISO-8601 system assumes proleptic Gregorian calendar, year zero and
no leap seconds.
.PP
\f[B]Option -m\f[R] prints \f[B]lunar phase\f[R] at \f[I]DATE\f[R] as
\f[I]YYYY[-MM[-DD]]\f[R], auto expansion takes place on partial
\f[I]DATE input\f[R].
\f[I]DATE\f[R] ought to be \f[B]UTC time\f[R].
Code snippet adapted from \f[I]NetHack\f[R].
.PP
\f[B]Option -F\f[R] prints the date of next \f[B]Friday the 13th\f[R].
The \f[I]START_DATE\f[R] must be formated as \f[I]YYY[-MM[-DD]]\f[R].
Optionally, set \f[I]day in the week\f[R], such as \f[I]Sunday\f[R], and
\f[I]day number in month\f[R] as first and second positional parameters.
Set \f[B]option -FF\f[R] to print the following ten matches.
.SS Timezone Offsets
\f[B]DATE offsets\f[R] as per ISO-8601 are supported throughout this
script.
When environment \f[I]$TZ\f[R] is a positive or negative decimal number,
such as \f[I]UTC+3\f[R], it is read as offset.
Variable \f[I]$TZ\f[R] with timezone name or ID
(e.g.\ \f[B]America/Sao_Paulo\f[R]) is supported by \f[B]C-code
date\f[R] warping only.
.PP
This script uses \f[CR]Bash\f[R] / \f[CR]Ksh\f[R] arithmetics to perform
most time range calculations.
.SS Debug and Direct Execution
\f[B]Option -d\f[R] sets \f[I]TZ=UTC\f[R], unsets verbose switches and
run checks against \f[CR]C-code datediff\f[R] and
\f[CR]C-code date\f[R].
Set once to dump only when results differ and set twice to code exit
only.
.PP
\f[B]Option -D\f[R] disables C-code date warping and \f[B]option
-DD\f[R] disables \f[CR]Bash\f[R]/\f[CR]Ksh\f[R] \f[CR]printf %()T\f[R]
warping, too.
.PP
\ The project source is hosted at:
.IP
.EX
<https://gitlab.com/fenixdragao/shelldatediff>
<https://github.com/mountaineerbr/shellDatediff>
.EE
.SS REFINEMENT RULES
Some time intervals can be calculated in more than one way depending on
the logic used in the \f[CR]compound time range\f[R] display.
We decided to mimic \f[I]Hroptatyr\f[R]\[cq]s \f[CR]datediff\f[R]
refinement rules as often as possible.
.PP
Script error rate of the core code is estimated to be lower than one
percent after extensive testing with selected and corner-case sample
dates and times.
Check the script source code and repository for details.
.SS ENVIRONMENT
.TP
\f[B]CFACTOR\f[R]
Correction factor used in the lunar phase function.
.RS
.PP
Defaults=\[dq]\f[I]-1892\f[R]\[dq]
.RE
.TP
\f[B]DATE_CMD\f[R]
Path to \f[CR]C-code date\f[R] programme.
\f[B]GNU\f[R], \f[B]BSD\f[R], \f[B]AST\f[R], and \f[B]Busybox\f[R]
\f[B]date\f[R] are supported.
.TP
\f[B]TZ\f[R]
Offset time.
POSIX time zone definition by the $TZ variable takes a different form
from ISO-8601 standards, so that ISO UTC-03 is equivalent to setting
$TZ=UTC+03.
.RS
.PP
Only the \f[B]C-code date\f[R] programme can parse timezone names and
IDS.
.RE
.SS WARRANTY
Licensed under the \f[B]GNU General Public License 3\f[R] or better.
This software is distributed without support or bug corrections.
Many thanks for all whose advice improved this script from
\f[B]c.u.shell\f[R].
.PP
\f[CR]Bash2.05b+\f[R], \f[CR]Ksh93\f[R] or \f[CR]Zsh\f[R] is required.
\f[CR]Bc\f[R] or \f[CR]Ksh93\f[R] is required for single-unit
calculations.
\f[B]FreeBSD12+\f[R] or \f[B]GNU\f[R] \f[B]date\f[R] is optionally
required.
.SS SEE ALSO
.IP \[bu] 2
\f[CR]Datediff\f[R] from \f[CR]dateutils\f[R], by \f[I]Hroptatyr\f[R]
<www.fresse.org/dateutils/>
.IP \[bu] 2
\f[CR]PDD\f[R] from \f[I]Jarun\f[R] <github.com/jarun/pdd>
.IP \[bu] 2
\f[CR]AST date\f[R] elapsed time \f[CR]option -E\f[R]
<github.com/att/ast>
.IP \[bu] 2
\f[CR]Units\f[R] from GNU.
\c
.UR https://www.gnu.org/software/units/
.UE \c
.IP \[bu] 2
Do calendrical savants use calculation to answer date questions?
A functional magnetic resonance imaging study, \f[I]Cowan and
Frith\f[R], 2009.
\c
.UR https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2677581/#!po=21.1864
.UE \c
.IP \[bu] 2
Calendrical calculation, \f[I]Dershowitz and Reingold\f[R], 1990 \c
.UR
http://www.cs.tau.ac.il/~nachum/papers/c/home/jsn/www/lab-shelldatediff/man/datediff.sh.1.mdc-paper.pdf
.UE \c
\ \c
.UR https://books.google.com.br/books?id=DPbx0-qgXu0C
.UE \c
.IP \[bu] 2
How many days are in a year?
\f[I]Manning\f[R], 1997.
\c
.UR https://pumas.nasa.gov/files/04_21_97_1.pdf
.UE \c
.IP \[bu] 2
Iana Time zone database \c
.UR https://www.iana.org/time-zones
.UE \c
.IP \[bu] 2
Fun with Date Arithmetic (see replies) \c
.UR
https://linuxcommando.blogspot.com/2009/11/fun-with-date-arithmetic.html
.UE \c
.PP
Tip: Division is but subtractions and multiplication but additions.
.PD 0
.P
.PD
\[en]Lost reference
.SS EXAMPLES
\f[B]Leap year check\f[R]
.PP
\ \ \ datediff.sh \f[B]-l\f[R] 2000
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]-l\f[R] {1980..2000}
.PD 0
.P
.PD
\ \ \ echo 2000 | datediff.sh \f[B]-l\f[R]
.PP
\f[B]Moon phases for January 1996\f[R]
.PP
\ \ \ datediff.sh \f[B]-m\f[R] 1996-01
.PP
\f[B]Print following Friday, 13th\f[R]
.PP
\ \ \ datediff.sh \f[B]-F\f[R]
.PP
\f[B]Print following Sunday, 12th after 1999\f[R]
.PP
\ \ \ datediff.sh \f[B]-F\f[R] sun 12 1999
.PP
\f[B]Single unit time periods\f[R]
.PP
\ \ \ datediff.sh 2022-03-01T00:00:00 2022-03-01T10:10:10 \f[I]m\f[R]
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]10 years ago\[aq] \f[I]mo\f[R]
.PD 0
.P
.PD
\ \ \ datediff.sh 1970-01-01 2000-02-02 \f[I]y\f[R]
.PP
\f[B]Time ranges/intervals\f[R]
.PP
\ \ \ datediff.sh 2020-01-03T14:30:10 2020-12-24T00:00:00
.PD 0
.P
.PD
\ \ \ datediff.sh 0921-04-12 1999-01-31
.PD 0
.P
.PD
\ \ \ echo 1970-01-01 2000-02-02 | datediff.sh
.PD 0
.P
.PD
\ \ \ \f[I]TZ=UTC+3\f[R] datediff.sh 2020-01-03T14:30:10-06
2021-12-30T21:00:10-03:20
.PP
\f[B]GNU date warping\f[R]
.PP
\ \ \ datediff.sh \[aq]next monday\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh 2019/6/28 1Aug
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]5min 34seconds\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh 1aug1990-9month now
.PD 0
.P
.PD
\ \ \ datediff.sh -- -2week-3day
.PD 0
.P
.PD
\ \ \ datediff.sh -- \[dq]today + 1day\[dq] \f[I]\[at]\f[R]1952292365
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]-2\f[R] -- \[aq]1hour ago 30min ago\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh today00:00 \[aq]12 May 2020 14:50:50\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]2020-01-01 - 6months\[aq] 2020-01-01
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]05 jan 2005\[cq] \[aq]now - 43years -13 days\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]-u\f[R] 2023-01-14T11:20:00Z
\[aq]2023-01-14T11:20:00Z + 5 hours\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \f[I]\[at]\f[R]1561243015 \f[I]\[at]\f[R]1592865415
.PP
\f[B]BSD date warping\f[R]
.PP
\ \ \ datediff.sh \f[B]-f\f[R]\[aq]%m/%d/%Y\[aq] 6/28/2019 9/04/1970
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]-r\f[R] 1561243015 1592865415
.PD 0
.P
.PD
\ \ \ datediff.sh 200002280910.33 0003290010.00
.PD 0
.P
.PD
\ \ \ datediff.sh -- \[aq]-v +2d\[aq] \[aq]-v -3w\[aq]
.SS OPTIONS
\f[B]Extra Functions\f[R]
.TP
\f[B]-e\f[R] [\f[I]YEAR\f[R]..]
Print Western Easter dates.
.TP
\f[B]-ee\f[R] [\f[I]YEAR\f[R]..]
Print Carnaval, Easter and Corpus Christi dates.
.TP
\f[B]-FF\f[R] [[\f[I]DAY_IN_WEEK\f[R]] [\f[I]DAY_IN_MONTH\f[R]]] [\f[I]START_DATE\f[R]]
Print following Friday the 13th date.
.TP
\f[B]-h\f[R]
Print this help page.
.TP
\f[B]-l\f[R] [\f[I]YEAR\f[R]..]
Check if YEAR is leap year.
.TP
\f[B]-m\f[R] [\f[I]YYYY[-MM[-DD]]\f[R]]
Print lunar phase at DATE (ISO UTC time).
.PP
\f[B]Main Function\f[R]
.TP
\f[B]-[\f[R]\f[I]0-9\f[R]\f[B]]\f[R]
Set scale for single unit interval results.
.TP
\f[B]-DD\f[R], \f[B]-dd\f[R]
Debug options, check help page.
.TP
\f[B]-f\f[R] [\f[I]FMT\f[R]]
Input time string format (only with \f[CR]BSD date\f[R]).
.TP
\f[B]-R\f[R]
Print human time in RFC-5322 format (verbose).
.TP
\f[B]-r\f[R], \f[B]-\[at]\f[R]
Input DATES are UNIX times.
.TP
\f[B]-t\f[R], \f[B]-tt\f[R]
Table layouts display of single unit intervals (such as
\f[CR]-vtt\f[R]).
.TP
\f[B]-u\f[R]
Set or print in UTC times instead of local times.
This affects how \f[CR]C-code date\f[R] process input dates.
.TP
\f[B]-v\f[R], \f[B]-vv\f[R], \f[B]-vvv\f[R]
Change how output is displayed, verbose levels.
.SH AUTHORS
Jamil Soni N.

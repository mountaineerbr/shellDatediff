.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "DATEDIFF.SH" "1" "January 2025" "v0.26.1" "General Commands Manual"
.SH NAME
.PP
\ \ \ \f[B]datediff.sh\f[R] \- Calculate time ranges / intervals between
dates
.SH SYNOPSIS
.PP
\ \ \ \f[B]datediff.sh\f[R] [\-Rrttuvvv] [\-\f[I]NUM\f[R]] [\-f
\f[I]\[dq]FMT\[dq]\f[R]] \f[I]DATE1\f[R] \f[I]DATE2\f[R]
[\f[I]UNIT\f[R]]
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] \f[B]\-FF\f[R] [\-vv]
[[\f[I]DAY_IN_WEEK\f[R]] [\f[I]DAY_IN_MONTH\f[R]]]
[\f[I]START_DATE\f[R]]
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] [\f[B]\-ee\f[R]|\f[B]\-l\f[R]] [\-v]
\f[I]YEAR\f[R]..
.PD 0
.P
.PD
\ \ \ \f[B]datediff.sh\f[R] \f[B]\-m\f[R] [\-v] \f[I]DATE\f[R]..
.SH DESCRIPTION
Calculate time interval (elapsed time) between \f[I]DATE1\f[R] and
\f[I]DATE2\f[R] in various time units.
The \f[CR]C\-code date\f[R] programme is optionally wrapped to process
dates.
.PP
Special functions include checking if \f[I]YEAR\f[R] is leap, generating
Easter, Carnaval, and Corpus Christi dates on a given \f[I]YEAR\f[R] and
the phase of the moon at \f[I]DATE\f[R].
.SH OPTIONS
\f[B]Special Date Functions\f[R]
.TP
\f[B]\-e\f[R] [\f[I]YEAR\f[R]..]
Easter dates (Western Church).
.TP
\f[B]\-ee\f[R] [\f[I]YEAR\f[R]..]
Carnaval, Easter and Corpus Christi dates (TSV).
.TP
\f[B]\-F\f[R], \f[B]\-FF\f[R] [[\f[I]DAY_IN_WEEK\f[R]] [\f[I]DAY_IN_MONTH\f[R]]] [\f[I]START_DATE\f[R]]
Following Friday the 13th date.
.RS
.PP
Set twice to print the following 10 matches.
.RE
.TP
\f[B]\-h\f[R]
Print the script help page.
.TP
\f[B]\-l\f[R] [\f[I]YEAR\f[R]..]
Check for leap years.
.TP
\f[B]\-m\f[R] [\f[I]YYYY[\-MM[\-DD]]\f[R]]
Print lunar phase for DATE.
.PP
\f[B]Date and Time Calculations\f[R]
.TP
\f[B]\-[\f[R]\f[I]0\-9\f[R]\f[B]]\f[R]
Scale factor for single\-unit float results.
.TP
\f[B]\-DD\f[R], \f[B]\-dd\f[R]
Debug options, check Diagnostics section.
.TP
\f[B]\-f\f[R] [\f[I]FMT\f[R]]
Input time format specification (\f[CR]BSD date\f[R]).
.TP
\f[B]\-R\f[R]
Print output dates in RFC\-5322 format.
.TP
\f[B]\-r\f[R], \f[B]\-\[at]\f[R]
Input DATES are UNIX timestamps.
.TP
\f[B]\-t\f[R], \f[B]\-tt\f[R]
Table display layout selection of single\-unit intervals.
.TP
\f[B]\-u\f[R]
Set input and output dates to UTC instead of local times.
.RS
.PP
This affects how \f[CR]C\-code date\f[R] process input dates.
.RE
.TP
\f[B]\-v\f[R], \f[B]\-vv\f[R], \f[B]\-vvv\f[R]
Select / filter output result groups (main function).
.RS
.PP
Verbose levels.
.RE
.SH DATE AND TIME CALCULATIONS
\f[CR]GNU date\f[R] accepts mostly free format human readable date
strings.
If using \f[CR]FreeBSD date\f[R], input \f[I]DATE\f[R] strings must be
\f[B]ISO\-8601\f[R] (\[lq]\f[I]YYYY\-MM\-DDThh:mm:ss\f[R]\[rq]) or other
supported time formats, unless \f[B]option \-f\f[R] \f[I]FMT\f[R] is set
to a new input time format.
If \f[CR]C\-code date\f[R] programme is not available, then input must
be formatted as \f[B]ISO\-8601\f[R] or \f[B]UNIX time\f[R].
.PP
If \f[I]DATE\f[R] is not set, defaults to \f[I]now\f[R].
If only one \f[I]DATE\f[R] is set, the first one is assumed to be
\f[I]now\f[R] or \f[I]1970\f[R].
.PP
To flag \f[I]DATE\f[R] as UNIX time, prepend an \[lq]at\[rq] sign
\[lq]\f[I]\[at]\f[R]\[rq] to it or set \f[B]option \-r\f[R].
.PP
Stdin input is expected to have one \f[I]DATE\f[R] string per line (max
two lines) or two ISO\-8601 \f[I]DATES\f[R] separated by space in a
single line.
Input is processed in a best effort basis.
.SH DATE AND TIME OUTPUT
Output \[lq]RANGES\[rq] section displays intervals in different units of
time (years, or months, or weeks, or days, or hours, or minutes, or
seconds alone).
It also displays a compound time range with all the mentioned units into
consideration to each other.
.PP
Single \f[I]UNIT\f[R] time periods can be displayed in table format with
\f[B]option \-t\f[R].
The decimal scale factor may be set with command line \f[B]option
\-NUM\f[R] where \f[I]NUM\f[R] is an integer.
The least significant digit of the result is subject to rounding.
.PP
When the last positional parameter \f[I]UNIT\f[R] is exactly one of
\f[I]Y\f[R], \f[I]MO\f[R], \f[I]W\f[R], \f[I]D\f[R], \f[I]H\f[R],
\f[I]M\f[R], or \f[I]S\f[R], only a single \f[I]UNIT\f[R] time interval
is printed to stdout.
.PP
Output \[lq]DATES\[rq] section prints input dates in \f[B]ISO\-8601
format\f[R] or, if \f[B]option \-R\f[R] is set, \f[B]RFC\-5322
format\f[R].
.PP
\f[B]Option \-u\f[R] sets or prints dates in Coordinated Universal Time
(UTC).
This affects how the \f[CR]C\-code date\f[R] programme process dates,
too.
.PP
Set \f[B]option \-v\f[R] to print only the single\-unit results and
\f[B]\-vv\f[R] to print only the compound time range result.
.SH SPECIAL DATE FUNCTIONS
\f[B]Option \-e\f[R] prints Easter dates for given \f[I]YEARS\f[R]
(Western Church) and \f[B]option \-ee\f[R] additionally prints Carnaval
and Corpus Christi dates.
.PP
\f[B]Option \-l\f[R] checks if \f[I]YEAR\f[R] is leap.
Set \f[B]option \-v\f[R] to decrease verbosity.
The ISO\-8601 system assumes proleptic Gregorian calendar, year zero,
and no leap seconds.
.PP
\f[B]Option \-m\f[R] prints lunar phase for \f[I]UTC\f[R] \f[I]DATE\f[R]
(\[lq]\f[I]YYYY[\-MM[\-DD]]\f[R]\[rq]).
Auto expansion takes place on partial \f[I]DATE input\f[R].
Code snippet adapted from \f[I]NetHack\f[R].
.PP
\f[B]Option \-F\f[R] prints the date of next Friday the 13th.
The \f[I]START_DATE\f[R] must be formatted as
\[lq]\f[I]YYYY[\-MM[\-DD]]\f[R]\[rq].
Optionally, set \f[I]day\-in\-week\f[R], such as \f[I]Sunday\f[R], and
\f[I]day\-in\-month\f[R] as the first and second positional parameters,
respectively.
Set \f[B]options \-FF\f[R] to print the following ten matches.
.SH TIMEZONE OFFSETS
\f[I]ISO DATE\f[R] and \f[I]POSIX $TZ\f[R] offsets are supported
throughout this script.
.PP
Environment \f[I]$TZ\f[R] is read as POSIX offset when it holds a
positive or negative decimal number, such as \f[I]+03\f[R] or
\f[I]UTC+03\f[R].
POSIX time zone definition by the \f[I]$TZ\f[R] variable takes a
different form from ISO\-8601 standards, so that \f[I]ISO DATE
UTC\-03\f[R] is equivalent to setting \f[I]$TZ=UTC+03\f[R].
.PP
Only the \f[CR]C\-code date\f[R] programme can parse timezone names and
IDS (e.g.\ \[lq]\f[I]America/Sao_Paulo\f[R]\[rq]).
.SH ENVIRONMENT
.TP
\f[B]CFACTOR\f[R]
Correction factor used in the lunar phase function.
.RS
.PP
Defaults=\[dq]\f[I]\-1892\f[R]\[dq]
.RE
.TP
\f[B]DATE_CMD\f[R]
Command for the \f[CR]C\-code date\f[R].
.RS
.PP
\f[B]GNU\f[R], \f[B]BSD\f[R], \f[B]AST\f[R], and \f[B]Busybox\f[R]
\f[B]date\f[R] are supported.
.RE
.TP
\f[B]TZ\f[R]
POSIX\-style time zone offset.
.SH REFINEMENT RULES
\f[B]Compound time range\f[R] calculations depend on refining logic to
assemble the final results when dealing with end\-of\-month and
start\-of\-month date combinations, and different month lengths.
.PP
This script tried to mimic \f[I]Hroptatyr\f[R]\[cq]s
\f[CR]C\-code datediff\f[R] refinement rules as often as it was
possible.
.PP
Script error rate of the main code is estimated to be lower than one
percent after extensive testing with selected and corner\-case sample
dates and times.
.PP
Check source code and project repository for details.
.SH DIAGNOSTICS
This script uses \f[CR]Bash\f[R] / \f[CR]Ksh\f[R] arithmetics to perform
most time range calculations and relies on \f[CR]bc\f[R] for
large\-number integers and float arithmetics.
The programme \f[CR]dc\f[R] is executed in the Easter function as a
mysterious function taken from \f[I]Dershowitz and Reingold\f[R]\[cq]s
paper.
.PP
\f[B]Option \-d\f[R] execute result checks against
\f[CR]C\-code datediff\f[R] and \f[CR]C\-code date\f[R] programmes in
the main function.
This sets UTC time and runs checks against \f[CR]C\-code datediff\f[R]
and \f[CR]C\-code date\f[R].
.PP
Set \f[B]option \-d\f[R] once to dump debug information only when
results differ and set \f[B]options \-dd\f[R] to code exit only.
Requires \f[CR]datediff.debug.sh\f[R].
.PP
\f[B]Option \-D\f[R] disables C\-code date warping and \f[B]options
\-DD\f[R] disable \f[CR]Bash\f[R]/\f[CR]Ksh\f[R] \f[CR]printf %()T\f[R]
warping, too.
This will have the script run and process dates with only the shell
built\-in code instead of relying on \f[CR]C\-code date\f[R] for date
processing and format conversions.
.SH WARRANTY
Licensed under the \f[B]GNU General Public License 3\f[R] or better.
This software is distributed without support or bug corrections.
.PP
\f[CR]Bash2.05b+\f[R], \f[CR]Ksh93\f[R] or \f[CR]Zsh\f[R] is required.
\f[CR]Bc\f[R] or \f[CR]Ksh93\f[R] is required for single\-unit
calculations.
\f[CR]FreeBSD12+\f[R] or \f[CR]GNU\f[R] \f[CR]date\f[R] is optionally
required.
.PP
Many thanks for all advice from c.u.shell!
.SH PROJECT SOURCE
.IP
.EX
<https://gitlab.com/fenixdragao/shelldatediff>

<https://github.com/mountaineerbr/shellDatediff>
.EE
.SH EXAMPLES
\f[B]Leap year check\f[R]
.PP
\ \ \ datediff.sh \f[B]\-l\f[R] {1990..2000}
.PD 0
.P
.PD
\ \ \ echo 2000 | datediff.sh \f[B]\-l\f[R]
.PP
\f[B]Moon phases for January or full year\f[R]
.PP
\ \ \ datediff.sh \f[B]\-m\f[R] 1996\-01
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]\-m\f[R] 1996
.PP
\f[B]Print following Friday, 13th\f[R]
.PP
\ \ \ datediff.sh \f[B]\-F\f[R]
.PP
\f[B]Print following Sunday, 12th after 1999\f[R]
.PP
\ \ \ datediff.sh \f[B]\-F\f[R] sun 12 1999
.PP
\f[B]Single\-unit time periods\f[R]
.PP
\ \ \ datediff.sh \[aq]10 years ago\[aq] \f[I]mo\f[R] #[mo]nths
.PD 0
.P
.PD
\ \ \ datediff.sh 1970\-01\-01 2000\-02\-02 \f[I]y\f[R] #[y]ears
.PP
\f[B]Time ranges/intervals\f[R]
.PP
\ \ \ datediff.sh 0921\-04\-12 1999\-01\-31
.PD 0
.P
.PD
\ \ \ echo 1970\-01\-01 2000\-02\-02 | datediff.sh
.PD 0
.P
.PD
\ \ \ \f[B]TZ=UTC+03\f[R] datediff.sh 2020\-01\-03T14:30:10\-06
2021\-12\-30T21:00:10\-03
.PP
\f[B]GNU date warping\f[R]
.PP
\ \ \ datediff.sh 2019/6/28 1Aug
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]next monday\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]5min 34seconds\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]2020\-01\-01 \- 6months\[aq]
\[aq]2020\-01\-01\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \[aq]05 jan 2005\[aq] \[aq]now \- 43years \-13
days\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]\-2\f[R] \-\- \[aq]1hour ago 30min ago\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]\-u\f[R] \[aq]2023\-01\-14T11:20:00Z\[aq]
\[aq]2023\-01\-14T11:20:00Z + 5 hours\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \-\- \[aq]\-2week\-3day\[aq] \[aq]now\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \-\- \[aq]today + 1day\[aq] \f[I]\[at]\f[R]1952292365
.PD 0
.P
.PD
\ \ \ datediff.sh \f[I]\[at]\f[R]1561243015 \f[I]\[at]\f[R]1592865415
.PP
\f[B]BSD date warping\f[R]
.PP
\ \ \ datediff.sh \f[B]\-f\f[R]\[aq]%m/%d/%Y\[aq] \[aq]6/28/2019\[aq]
\[aq]9/04/1970\[aq]
.PD 0
.P
.PD
\ \ \ datediff.sh \f[B]\-r\f[R] 1561243015 1592865415
.PD 0
.P
.PD
\ \ \ datediff.sh 200002280910.33 0003290010.00
.PD 0
.P
.PD
\ \ \ datediff.sh \-\- \[aq]\-v +2d\[aq] \[aq]\-v \-3w\[aq]
.SH SEE ALSO
.IP \[bu] 2
\f[CR]Datediff\f[R] from \f[CR]dateutils\f[R], by \f[I]Hroptatyr\f[R]
<www.fresse.org/dateutils/>.
.IP \[bu] 2
\f[CR]PDD\f[R] from \f[I]Jarun\f[R] <github.com/jarun/pdd>.
.IP \[bu] 2
\f[CR]AST date\f[R] elapsed time \f[CR]option \-E\f[R]
<github.com/att/ast>.
.IP \[bu] 2
\f[CR]Units\f[R] from GNU.
\c
.UR https://www.gnu.org/software/units/
.UE \c
\&.
.IP \[bu] 2
\[lq]\f[I]Do calendrical savants use calculation to answer date
questions?\f[R]\[rq] A functional magnetic resonance imaging study,
\f[I]Cowan and Frith\f[R], 2009 \c
.UR https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2677581/#!po=21.1864
.UE \c
\&.
.IP \[bu] 2
Calendrical calculation, \f[I]Dershowitz and Reingold\f[R], 1990 \c
.UR http://www.cs.tau.ac.il/~nachum/papers/cc-paper.pdf
.UE \c
\ \c
.UR https://books.google.com.br/books?id=DPbx0-qgXu0C
.UE \c
\&.
.IP \[bu] 2
How many days are in a year?
\f[I]Manning\f[R], 1997 \c
.UR https://pumas.nasa.gov/files/04_21_97_1.pdf
.UE \c
\&.
.IP \[bu] 2
Iana Time zone database \c
.UR https://www.iana.org/time-zones
.UE \c
\&.
.IP \[bu] 2
Fun with Date Arithmetic (see replies) \c
.UR
https://linuxcommando.blogspot.com/2009/11/fun-with-date-arithmetic.html
.UE \c
\&.
.IP \[bu] 2
\[lq]\f[I]Division is but subtractions and multiplication but
additions\f[R]\[rq] \-\-Lost reference
.SH AUTHORS
Jamil Soni N.
